/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, type JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { type GLTF } from 'three-stdlib'

import robot_base from '/models/stations/robot_base.glb?url'

const STL_MATERIAL = new THREE.MeshPhysicalMaterial({
    color: 0xedcaca,
    metalness: 0.6,
    // roughness: 0.1,
    opacity: 0.8,
    transparent: true,
    transmission: 0.99,
    clearcoat: 1.0,
    clearcoatRoughness: 0.25,
});
  
type GLTFResult = GLTF & {
  nodes: {
    robot_base_mesh_0: THREE.Mesh
    robot_base_mesh_1: THREE.Mesh
  }
  materials: {}
}

export function RedcareBase(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(robot_base) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        name="robot_base_mesh_0"
        castShadow
        receiveShadow
        geometry={nodes.robot_base_mesh_0.geometry}
        material={STL_MATERIAL}
      />
      <mesh
        name="robot_base_mesh_1"
        castShadow
        receiveShadow
        geometry={nodes.robot_base_mesh_1.geometry}
        material={STL_MATERIAL}
      />
    </group>
  )
}

useGLTF.preload(robot_base)
